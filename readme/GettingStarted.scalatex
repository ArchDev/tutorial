@import Main._
@import scalaworld.Readme._
@import scala.meta.tutorial.BuildInfo

@sect{Setup}
  @ol
    @li
      Clone the @lnk("workshop repo", "https://github.com/scalameta/tutorial").
      Alternatively, for a minimal project template that uses the bleeding edge
      version of scalameta/paradise, clone
      @lnk("this repo", "https://github.com/olafurpg/scalameta-macro-template").
    @li
      Run @code{sbt test} to make sure everything works.
    @li
      Setup the project in your favorite IDE, for example IntelliJ, ENSIME or vim.
    @li
      Open up @code{core/src/test/scala/scalaworld/Playground.scala}.
    @li
      Run @code{core/src/test/scala/scalaworld/Playground.scala}.
      Run @code{sbt "~core/testOnly scalaworld.Playground"}.
    @li
      (Optional)
      To experiment with scala.meta in the REPL, you can run the following
      in the @lnk("Ammonite-REPL", "http://www.lihaoyi.com/Ammonite/#Ammonite-REPL")
      @hl.scala
        import $ivy.`org.scalameta:scalameta_2.11:@(BuildInfo.scalameta)`, scala.meta._
      @b{Note.} The macro annotation examples will not run in the REPL, follow
      @lnk("scalameta/paradise#10", "https://github.com/scalameta/paradise/issues/10")
      for updates.

  @sect{Video}
    @p
      To accompany the workshop, here is the recording from the original
      scala.world conference talk.
    @raw
      <iframe width="100%" style="height: 28em" src="https://www.youtube.com/embed/-l7pV0sFq1c" frameborder="0" allowfullscreen></iframe>
